version: '3.1'


services:
  db:
    container_name: social_network_db
    image: postgres:latest
    ports:
        - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    volumes:
      - ./scripts:/docker-entrypoint-initdb.d postgres
      - ./data/postgres:/var/lib/postgresql/data

  migrator:
    container_name: migrator
    command: ["sh", "-c", "alembic upgrade head"]
    depends_on:
      - db
    build:
      dockerfile: _app.Dockerfile
      context: .
    environment:
      DB_URI: postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}

  data_loader:
    container_name: data_loader
    build:
      dockerfile: _load_data.Dockerfile
      context: .
    depends_on:
      - db
      - migrator
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}

  service_online:
    container_name: social_network_app
    image: social_network_app:dev
    build:
      dockerfile: _app.Dockerfile
      context: .
    restart: always
    ports:
      - "81:8000"
    command: [ "uvicorn", "app.server:app", "--host", "0.0.0.0", "--port", "8000" ]

    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: curl -sS http://127.0.0.1:8000 || exit 1
      interval: 5s
      timeout: 10s
      retries: 3